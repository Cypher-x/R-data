neighbor <- xpathSApply(rootNode,"//neighborhood",xmlValue)
councildist <- xpathSApply(rootNode,"//councildistrict",xmlValue)
policedist <- xpathSApply(rootNode,"//policedistrict",xmlValue)
cbind(name,zip,neighbor,councildist,policedist)
cbind(name,zip)
name <- xpathSApply(rootNode,"//name",xmlValue)
cbind(neighbor,zip)
cbind(neighbor,zip, councildist)
length(which(zip == 21231))
install.packages("KernSmooth")
help(library(KernSmooth))
x <- c(0.5, 0.6)
x <- C(T,F)
x <- c(T,F)
x <- vector("numeric", length = 10)
#vector function, vector default value of zero, and length 10
x <- vector("numeric", length = 0)
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
setwd(data_directory)
pollutant_obs <- function(directory, id = 1:332) {
setwd(paste(data_directory,"/",directory,sep=""))
obs <- c()
for (i in id){
if (i <= 9){
name_file <- paste("00", i, sep="")
}
else if (10 <= i && i <= 99){
name_file <- paste("0", i, sep="")
}
else if (i >= 100){
name_file <- paste(i, sep="")
}
else {
print("range error")
}
data <- read.csv(paste(name_file, ".csv", sep =""))
#counts observations and strings them together:
y <- sum(complete.cases(data) == TRUE)
obs <- c(obs, y)
}
obs_table <- data.frame(id,obs)
print(obs_table)
}
pollutant_obs("specdata", 1)
pollutant_obs("specdata", c(2, 4, 8, 10, 12))
pollutant_obs("specdata", 30:25)
pollutant_obs("specdata", 3)
install.packages("swirl")
> library("swirl")
> swirl()
library("swirl")
swirl()
1
library("swirl")
swirl()
0
library("swirl")
swirl()
help(subset)
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
setwd(data_directory)
polutant_corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/",directory,sep=""))
x <- c()
id = 1:332
result_corr < vector(mode = "numeric", length = 0)
for (i in id){
if (i <= 9){
name_file <- paste("00", i, sep="")
}
else if (10 <= i && i <= 99){
name_file <- paste("0", i, sep="")
}
else if (i >= 100){
name_file <- paste(i, sep="")
}
else {
print("range error")
}
data <- read.csv(paste(name_file, ".csv", sep =""))
complete_data <- complete.cases(data)
above_threshold <- subset(complete_data, complete_data$obs > threshold)
Length_subset <- length(c(above_threshold[,1]))
}
}
print(above_threshold)
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
setwd(data_directory)
polutant_corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/",directory,sep=""))
x <- c()
id = 1:332
result_corr < vector(mode = "numeric", length = 0)
for (i in id){
if (i <= 9){
name_file <- paste("00", i, sep="")
}
else if (10 <= i && i <= 99){
name_file <- paste("0", i, sep="")
}
else if (i >= 100){
name_file <- paste(i, sep="")
}
else {
print("range error")
}
data <- read.csv(paste(name_file, ".csv", sep =""))
complete_data <- complete.cases(data)
above_threshold <- subset(complete_data, complete_data$obs > threshold)
Length_subset <- length(c(above_threshold[,1]))
}
print(above_threshold)
}
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
setwd(data_directory)
polutant_corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/",directory,sep=""))
x <- c()
id = 1:332
result_corr < vector(mode = "numeric", length = 0)
for (i in id){
if (i <= 9){
name_file <- paste("00", i, sep="")
}
else if (10 <= i && i <= 99){
name_file <- paste("0", i, sep="")
}
else if (i >= 100){
name_file <- paste(i, sep="")
}
else {
print("range error")
}
data <- read.csv(paste(name_file, ".csv", sep =""))
complete_data <- complete.cases(data)
above_threshold <- subset(complete_data, complete_data$obs > threshold)
Length_subset <- length(c(above_threshold[,1]))
}
print(above_threshold)
}
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
setwd(data_directory)
polutant_corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/",directory,sep=""))
x <- c()
id = 1:332
result_corr < vector(mode = "numeric", length = 0)
for (i in id){
if (i <= 9){
name_file <- paste("00", i, sep="")
}
else if (10 <= i && i <= 99){
name_file <- paste("0", i, sep="")
}
else if (i >= 100){
name_file <- paste(i, sep="")
}
else {
print("range error")
}
data <- read.csv(paste(name_file, ".csv", sep =""))
}
complete_data <- complete.cases(data)
above_threshold <- subset(complete_data, complete_data$obs > threshold)
Length_subset <- length(c(above_threshold[,1]))
for (i in Length_subset) {
correl <- cor(complete_data$sulfate, complete_data$nitrate)
x <- append(x, correl, after = length(x))
}
c(x)
x
}
cr <- polutant_corr("specdata", 150)
head(cr)
summary(cr)
cr <- polutant_corr("specdata", 400)
head(cr)
summary(cr)
cr <- polutant_corr("specdata", 5000)
summary(cr)
length(cr)
cr <- polutant_corr("specdata")
summary(cr)
length(cr)
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
setwd(data_directory)
polutant_corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/",directory,sep=""))
x <- c()
id = 1:332
result_corr <- vector(mode = "numeric", length = 0)
for (i in id){
if (i <= 9){
name_file <- paste("00", i, sep="")
}
else if (10 <= i && i <= 99){
name_file <- paste("0", i, sep="")
}
else if (i >= 100){
name_file <- paste(i, sep="")
}
else {
print("range error")
}
data <- read.csv(paste(name_file, ".csv", sep =""))
}
complete_data <- complete.cases(data)
above_threshold <- subset(complete_data, complete_data$obs > threshold)
Length_subset <- length(c(above_threshold[,1]))
for (i in Length_subset) {
correl <- cor(complete_data$sulfate, complete_data$nitrate)
result_corr <- append(result_corr, correl, after = length(result_corr))
}
c(result_corr)
result_corr
}
cr <- polutant_corr("specdata", 150)
head(cr)
summary(cr)
cr <- polutant_corr("specdata", 400)
head(cr)
summary(cr)
cr <- polutant_corr("specdata", 5000)
summary(cr)
length(cr)
cr <- polutant_corr("specdata")
summary(cr)
length(cr)
setwd("C:/Users/Win/Desktop/Coursera/Data Science Course/R Data")
getwd()
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/", directory, sep= ""))
id = 1:332
combined_file <- vector(mode="character", length=length(id))
for(i in id) {
x <- id[i]
if (x >= 1 && x <= 9) {
name_file <- paste("00", i, ".csv", sep="")
}
else if (x >= 10 && x <= 99) {
name_file <- paste("0", i, ".csv", sep="")
}
else {
name_file <- paste(i, ".csv", sep="")
}
combined_file[i] <- name_file
}
corr_result <-vector(mode="numeric", length=0)
for(i in seq(combined_file)) {
airquality <- read.csv(combined_file[i])
obs <- complete.cases(airquality)
airquality <- airquality[obs, ]
if (nrow(airquality) > threshold) {
correlation <- cor(airquality$sulfate, airquality$nitrate)
corr_result <- append(corr_result, correlation)
}
}
result
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
setwd("C:/Users/Win/Desktop/Coursera/Data Science Course/R Data")
getwd()
data_directory <- "C:/Users/Win/Desktop/Coursera/Data Science Course/R Data"
corr <- function(directory, threshold = 0) {
setwd(paste(data_directory,"/", directory, sep= ""))
id = 1:332
combined_file <- vector(mode="character", length=length(id))
for(i in id) {
x <- id[i]
if (x >= 1 && x <= 9) {
name_file <- paste("00", i, ".csv", sep="")
}
else if (x >= 10 && x <= 99) {
name_file <- paste("0", i, ".csv", sep="")
}
else {
name_file <- paste(i, ".csv", sep="")
}
combined_file[i] <- name_file
}
corr_result <-vector(mode="numeric", length=0)
for(i in seq(combined_file)) {
airquality <- read.csv(combined_file[i])
obs <- complete.cases(airquality)
airquality <- airquality[obs, ]
if (nrow(airquality) > threshold) {
correlation <- cor(airquality$sulfate, airquality$nitrate)
corr_result <- append(corr_result, correlation)
}
}
corr_result
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
# Loop apply - takes a list and apply a function to each element of a list.
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
$a
$b
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
x <- 1:4
lapply(x, runif)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
# example 3:
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[,1])
a[,1]
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
a[,1]
[,1]
elt[,1]
function(elt[,1])
elt[,1]
elt[,1]
elt[,1]
elt[,1]
lapply(x, function(x) x[,1])
lapply(x, function(x) x[1,])
lapply(x, function(x) x[0,])
lapply(x, function(x) x[1,])
lapply(x, function(x) x[,3])
lapply(x, function(x) x[,3])
lapply(x, function(x) x[,2])
lapply(x, function(x) x[1,])
lapply(x, function(x) x[2,])
x(x[,1])
c(x, x[,1])
x <- list(a = 1:5, b = rnorm(10))
sapply(x, mean)
library(datasets)
data(iris)
?iris
print(Sepal.Length)
View(iris)
subset_virginica <- iris[iris$Species == "virginica"]
View(iris)
subset_virginica <- iris$Species == "virginica"
View(iris)
View(iris)
subset_virginica <- iris[iris$Species == "virginica" &
iris$Sepal.Length >= 0]
subset_virginica <- iris[iris$Species == "virginica" & iris$Sepal.Length >= 0]
View(iris)
subset_virginica <- iris$Species == "virginica"
Sepal_length <- iris$Sepal.Length >= 0
subset_virginica <- iris$Species == "virginica"
Sepal_length <- iris$Sepal.Length
virginica <- iris$Species == "virginica"
Sepal_length <- iris$Sepal.Length
subset_virginica <- list(Sepal_length,subset_virginica)
virginica <- iris$Species == "virginica"
Sepal_length <- iris$Sepal.Length
subset_virginica <- data.frame(Sepal_length,subset_virginica)
subset_virginica <- data.frame(Sepal_length & subset_virginica = TRUE)
subset_virginica <- data.frame(Sepal_length & subset_virginica = TRUE)
library(datasets)
data(iris)
virginica <- iris$Species == "virginica"
Sepal_length <- iris$Sepal.Length
subset_virginica <- data.frame(Sepal_length & (subset_virginica = TRUE))
View(iris)
View(subset_virginica)
View(subset_virginica)
library(datasets)
data(iris)
virginica <- iris$Species == "virginica"
Sepal_length <- iris$Sepal.Length
subset_virginica <- iris[iris$Species == "virginica"]
subset_virginica <- iris[iris$Species == "virginica",]
library(datasets)
data(iris)
subset_virginica <- iris[iris$Species == "virginica",]
mean(subset_virginica$Sepal.Length)
library(datasets)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
View(mtcars)
library(datasets)
data(mtcars)
lapply(split(mtcars$mpg, mtcars$cyl), mean)
library(datasets)
head(airquality)
head(mtcars)
View(mtcars)
library(datasets)
head(airquality)
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
lapply(split_month, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
split_month <- split(airquality, airquality$Month)
lapply(split_month, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
lapply(split_month, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
sapply(split_month, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
sapply(split_month, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(split_month, function(x)
colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
sapply(split_month, function(x)
colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(split_month, function(x)
colMeans(x[c("Ozone", "Solar.R", "Wind"),]))
sapply(split_month, function(x)
colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
split_month <- split(airquality, airquality$Month)
sapply(split_month, function(x)
colMeans(x[,c("Ozone", "Solar.R", "Wind", na.rm = T)]))
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
sapply(split_month, function(x)
colMeans(x[,c("Ozone", "Solar.R", "Wind")],na.rm=T))
library(datasets)
head(airquality)
split_month <- split(airquality, airquality$Month)
sapply(split_month, function(x)
colMeans(x[,c("Ozone", "Solar.R", "Wind")],na.rm=T))
library(datasets)
data(iris)
library(datasets)
data(mtcars)
head(mtcars)
View(mtcars)
library(datasets)
data(mtcars)
4c <- mtcars[mtcars$c == 4,]
8c <- mtcars[mtcars$c == 8,]
abs_meandiff <- (mean(4c$hp, na.rm=T)
- mean(8c$hp, na.rm=T))
4c <- mtcars[mtcars$4c == 4,]
8c <- mtcars[mtcars$8c == 8,]
abs_meandiff <- (mean(4c$hp, na.rm=T)
- mean(8c$hp, na.rm=T))
library(datasets)
data(mtcars)
4c <- mtcars[mtcars$4c == 4,]
8c <- mtcars[mtcars$8c == 8,]
abs_meandiff <- (mean(4c$hp, na.rm=T)
- mean(8c$hp, na.rm=T))
View(mtcars)
4c <- mtcars[mtcars$4cyl == 4,]
8c <- mtcars[mtcars$8cyl == 8,]
abs_meandiff <- (mean(4c$hp, na.rm=T)
- mean(8c$hp, na.rm=T))
4c <- mtcars[mtcars$cyl == 4,]
8c <- mtcars[mtcars$cyl == 8,]
abs_meandiff <- (mean(4c$hp, na.rm=T)
- mean(8c$hp, na.rm=T))
View(mtcars)
4c <- mtcars[mtcars$cyl == 4,]
8c <- mtcars[mtcars$cyl == 8,]
View(mtcars)
test <- mtcars$cyl
4c <- mtcars[mtcars$cyl = 4,]
8c <- mtcars[mtcars$cyl = 8,]
cyl_4 <- mtcars[mtcars$cyl == 4,]
cyl_8 <- mtcars[mtcars$cyl == 8,]
cyl_4 <- mtcars[mtcars$cyl == 4,]
cyl_8 <- mtcars[mtcars$cyl == 8,]
abs_meandiff <- (mean(cyl_4$hp, na.rm=T)
- mean(cyl_8$hp, na.rm=T))
abs_meandiff
abs_meandiff <- abs(mean(cyl_4$hp, na.rm=T)
- mean(cyl_8$hp, na.rm=T))
abs_meandiff
library(datasets)
data(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
